import React, { useState, useRef, useCallback } from 'react';
import Form from '../Form';
import Card from '../Card';
const initialState = {
    cardNumber: '#### #### #### ####',
    cardHolder: 'FULL NAME',
    cardMonth: '',
    cardYear: '',
    cardCvv: '',
    isCardFlipped: false,
};
const SimpleFormCard = () => {
    const [state, setState] = useState(initialState);
    const [currentFocusedElm, setCurrentFocusedElm] = useState(null);
    const updateStateValues = useCallback((keyName, value) => {
        setState(Object.assign(Object.assign({}, state), { [keyName]: value || initialState[keyName] }));
    }, [state]);
    let formFieldsRefObj = {
        cardNumber: useRef(null),
        cardHolder: useRef(null),
        cardDate: useRef(null),
        cardCvv: useRef(null),
    };
    let cardElementsRef = {
        cardNumber: useRef(null),
        cardHolder: useRef(null),
        cardDate: useRef(null),
    };
    let onCardFormInputFocus = (_event, inputName) => {
        const refByName = cardElementsRef[inputName];
        setCurrentFocusedElm(refByName);
    };
    let onCardInputBlur = useCallback(() => {
        setCurrentFocusedElm(null);
    }, []);
    return (React.createElement("div", { className: "wrapper" },
        React.createElement(Form, { cardMonth: state.cardMonth, cardYear: state.cardYear, onUpdateState: updateStateValues, cardNumberRef: formFieldsRefObj.cardNumber, cardHolderRef: formFieldsRefObj.cardHolder, cardDateRef: formFieldsRefObj.cardDate, cardCvv: formFieldsRefObj.cardCvv, onCardInputFocus: onCardFormInputFocus, onCardInputBlur: onCardInputBlur },
            React.createElement(Card, { cardNumber: state.cardNumber, cardHolder: state.cardHolder, cardMonth: state.cardMonth, cardYear: state.cardYear, cardCvv: state.cardCvv, currentFocusedElm: currentFocusedElm, cardNumberRef: cardElementsRef.cardNumber, cardHolderRef: cardElementsRef.cardHolder, cardDateRef: cardElementsRef.cardDate }))));
};
export default SimpleFormCard;
//# sourceMappingURL=index.js.map