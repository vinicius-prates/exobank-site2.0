import React from 'react';
import { useState } from 'react';
import './styles.css';
const currentYear = new Date().getFullYear();
const monthsArr = Array.from({ length: 12 }, (x, i) => {
    const month = i + 1;
    return month <= 9 ? '0' + month : month;
});
const yearsArr = Array.from({ length: 9 }, (_x, i) => currentYear + i);
export default function Form({ cardMonth, cardYear, onUpdateState, cardNumberRef, cardHolderRef, cardDateRef, cardCvv, onCardInputFocus, onCardInputBlur, children, }) {
    const [cardNumber, setCardNumber] = useState('');
    const handleFormChange = (event) => {
        const { name, value } = event.target;
        onUpdateState(name, value);
    };
    const onCardNumberChange = (event) => {
        let { value, name } = event.target;
        let cardNumber = value;
        value = value.replace(/\D/g, '');
        if (/^3[47]\d{0,13}$/.test(value)) {
            cardNumber = value
                .replace(/(\d{4})/, '$1 ')
                .replace(/(\d{4}) (\d{6})/, '$1 $2 ');
        }
        else if (/^3(?:0[0-5]|[68]\d)\d{0,11}$/.test(value)) {
            cardNumber = value
                .replace(/(\d{4})/, '$1 ')
                .replace(/(\d{4}) (\d{6})/, '$1 $2 ');
        }
        else if (/^\d{0,16}$/.test(value)) {
            cardNumber = value
                .replace(/(\d{4})/, '$1 ')
                .replace(/(\d{4}) (\d{4})/, '$1 $2 ')
                .replace(/(\d{4}) (\d{4}) (\d{4})/, '$1 $2 $3 ');
        }
        setCardNumber(cardNumber.trimRight());
        onUpdateState(name, cardNumber);
    };
    const onCvvFocus = (event) => {
        onUpdateState('isCardFlipped', true);
    };
    const onCvvBlur = (event) => {
        onUpdateState('isCardFlipped', false);
    };
    return (React.createElement("div", { className: "card-form" },
        React.createElement("div", { className: "card-list" }, children),
        React.createElement("div", { className: "card-form__inner" },
            React.createElement("div", { className: "card-input" },
                React.createElement("label", { htmlFor: "cardNumber", className: "card-input__label" }, "Card Number"),
                React.createElement("input", { type: "tel", name: "cardNumber", className: "card-input__input", autoComplete: "off", onChange: onCardNumberChange, maxLength: 19, ref: cardNumberRef, onFocus: (e) => onCardInputFocus(e, 'cardNumber'), onBlur: onCardInputBlur, value: cardNumber })),
            React.createElement("div", { className: "card-input" },
                React.createElement("label", { htmlFor: "cardName", className: "card-input__label" }, "Card Holder"),
                React.createElement("input", { type: "text", className: "card-input__input", autoComplete: "off", name: "cardHolder", onChange: handleFormChange, ref: cardHolderRef, onFocus: (e) => onCardInputFocus(e, 'cardHolder'), onBlur: onCardInputBlur })),
            React.createElement("div", { className: "card-form__row" },
                React.createElement("div", { className: "card-form__col" },
                    React.createElement("div", { className: "card-form__group" },
                        React.createElement("label", { htmlFor: "cardMonth", className: "card-input__label" }, "Expiration Date"),
                        React.createElement("select", { className: "card-input__input -select", value: cardMonth, name: "cardMonth", onChange: handleFormChange, ref: cardDateRef, onFocus: (e) => onCardInputFocus(e, 'cardDate'), onBlur: onCardInputBlur },
                            React.createElement("option", { value: "", disabled: true }, "Month"),
                            monthsArr.map((val, index) => (React.createElement("option", { key: index, value: val }, val)))),
                        React.createElement("select", { name: "cardYear", className: "card-input__input -select", value: cardYear, onChange: handleFormChange, onFocus: (e) => onCardInputFocus(e, 'cardDate'), onBlur: onCardInputBlur },
                            React.createElement("option", { value: "", disabled: true }, "Year"),
                            yearsArr.map((val, index) => (React.createElement("option", { key: index, value: val }, val)))))),
                React.createElement("div", { className: "card-form__col -cvv" },
                    React.createElement("div", { className: "card-input" },
                        React.createElement("label", { htmlFor: "cardCvv", className: "card-input__label" }, "CVV"),
                        React.createElement("input", { type: "tel", className: "card-input__input", maxLength: 4, autoComplete: "off", name: "cardCvv", onChange: handleFormChange, onFocus: onCvvFocus, onBlur: onCvvBlur, ref: cardCvv })))))));
}
//# sourceMappingURL=index.js.map